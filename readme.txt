######################################################################################################

Precondtions:
python: Python 2.7.5
pip packages:
ansible: 2.8.6
Jinja2: 2.10.3
Ansible user should be created and public keys should be configured on all devices
##############################################################################################################################################################################
for multi-site support {{site}} is add at all required places , please make sure directory with actual site name or code is created under following directories

cd ansible-junos-evpn-vxlan-final
mkdir inventory/{{site}} , then put hosts.yml at inventroy/{{site}} and all other var files at inventory/{{site}}/group_vars/all/

mkdir host_vars/{{site}} , then generate_ip_fabric.yml will create a directory for each host under the path host_vars/{{site}}/{{inventory_hostname}}

host_vars/{{site}}/{{inventory_hostname}} directory will hold host specfic vars and config generated by last run where host_vars/{{site}}/{{inventory_hostname}}/bakup/ directory 
will contain all config generated by generate_ip_fabric.yml expect the config generated by last run  
##################################################################################################################################################################################
ansible-junos-evpn-vxlan-final/ansible.cfg has required ansible configuration except inventory file

######################################################################################################

Generating the complete configuration: (executing all the roles)

ansible-playbook -i inventory/lab/hosts.yml -e "site=lab" generate_ip_fabric.yml #here lab is dummy site so please use your site code accordingly 

######################################################################################################

Executing a specific role:

Parameters to be passed:
-->rolename (name of role to be executed)


ansible-playbook generate_ip_fabric.yml -e "rolename=generate-overlay-vars" -i inventory/lab/hosts.yml -e "site=lab"  #here lab is dummy site so please use your site code accordingly
                         OR
ansible-playbook generate_ip_fabric.yml --extra-vars "rolename=generate-overlay-vars" -i inventory/lab/hosts.yml -e "site=lab" #here lab is dummy site so please use your site code accordingly

In the above example rolename is generate-overlay-vars

List of roles:

- generate-p2p-ips
- generate-underlay-vars
- generate-underlay-ebgp
- generate-overlay-vars
- generate-overlay-ibgp
- generate-tenant-vars
- generate-tenant-config
- generate-evpn-access
- generate-assembled-configuration

######################################################################################################
Dry run, it will push config , do "show | compare" rollback and then exit from the device:

ansible-playbook final_config_push.yml -c -vvv -i inventory/lab/hosts.yml -e "site=lab" , # here lab is dummy site so please use your site code accordingly


Pushing the generated configuration to all the hosts:
ansible-playbook final_config_push.yml -vvv -i inventory/lab/hosts.yml -e "site=lab" , # here lab is dummy site so please use your site code accordingly

Pushing the generated configuration to a particular host device:
ansible-playbook final_config_push.yml -vvv --limit leaf-01 -i inventory/lab/hosts.yml -e "site=lab" , #here lab is dummy site so please use your site code accordingly

######################################################################################################

Push with commit-confirm and commit-minutes for all hosts -- If the configuration is not pushed within the commit minutes time the configuration will be roled back.
Parameters to be passed:
->commit_confirm (yes or no)
->commit_minutes Ex(1,2)
ansible-playbook commit_confirm_push.yml -e "commit_confirm=yes commit_minutes=1" -i inventory/lab/hosts.yml -e "site=lab" , #here lab is dummy site so please use your site code accordingly


Push with commit-confirm and commit-minutes for a particualar host:
ansible-playbook commit_confirm_push.yml -e "commit_confirm=yes commit_minutes=1" --limit leaf-01 -i inventory/lab/hosts.yml -e "site=lab" , #here lab is dummy site so please use your site codeaccordingly
######################################################################################################
Fabric verfication  


ansible-playbook -i inventory/lab/hosts.yml -e "site=lab" check_ip_fabric.yml, #here lab is dummy site so please use your site codeaccordingly


check_ip_fabric.yml has following roles and plays 

  - name: check IP Fabric Interfaces Admin Status
    include_role:
      name: check-underlay-if

  - name: check ip reachability between underlay interfaces
    include_role:
      name: ping

  - name: check lldp for underlay interfaces
    include_role:
      name: check-lldp

  - name: check  IP Fabric ebgp & MP-iBGP
    include_role:
      name: check-bgp

  - name: check vtep interfaces
    include_role:
      name: check-vtep

  - name: check tenants vlans
    include_role:
      name: check-vlan

- name: check leaf to compute LACP Interfaces 
  hosts: leaf
  connection: local
  gather_facts: false
  roles:
  - check-lacp

- name: check spine-spine, spine-contrail MP-iBPG
  hosts: spine
  connection: local
  gather_facts: false
  roles:
  - check-spine-ibgp
################################################################################################

to collcet Junos CLI output execute check_cli.yml play book and it includes following plays and roles
- name: collect cli
  hosts: all
  connection: local
  gather_facts: false
  tasks:
  - name: inclued Juniper junos
    include_role:
      name: Juniper.junos
  - name: collect cli
    include_role:
      name: collect-commands
##############################################################################################
